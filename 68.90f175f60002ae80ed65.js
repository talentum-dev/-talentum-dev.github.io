"use strict";(self.webpackChunktraining_app=self.webpackChunktraining_app||[]).push([[68],{1068:(r,s,e)=>{e.r(s),e.d(s,{amplify_federated_sign_in:()=>h});var a=e(4600),f=e(1735),d=e(4052),i=e(4932),o=e(4102);const n=new f.k("amplify-federated-sign-in"),h=class{constructor(t){(0,a.r)(this,t),this.authState=d.A.SignIn,this.federated={}}componentWillLoad(){if(!i.g||"function"!=typeof i.g.configure)throw new Error(o.N);const{oauth:t={}}=i.g.configure();t.domain?this.federated.oauth_config=Object.assign(Object.assign({},this.federated.oauth_config),t):t.awsCognito&&(this.federated.oauth_config=Object.assign(Object.assign({},this.federated.oauth_config),t.awsCognito)),t.auth0&&(this.federated.auth0=Object.assign(Object.assign({},this.federated.auth0),t.auth0))}render(){return this.federated?Object.values(d.A).includes(this.authState)?(n.debug("federated Config is",this.federated),(0,a.h)("amplify-form-section",{"data-test":"federated-sign-in-section"},(0,a.h)("amplify-section",{"data-test":"federated-sign-in-body-section"},(0,a.h)("amplify-federated-buttons",{authState:this.authState,"data-test":"federated-sign-in-buttons",federated:this.federated})))):null:(n.debug("federated prop is empty. show nothing"),n.debug("federated={google_client_id: , facebook_app_id: , amazon_client_id}"),null)}}}}]);